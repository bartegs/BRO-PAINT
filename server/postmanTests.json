{
	"info": {
		"_postman_id": "2bfba7aa-5450-4055-9f94-e58ecedec6e2",
		"name": "Bro Paint",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "services",
			"item": [
				{
					"name": "get_all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"new role\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services",
							"host": [
								"{{url}}"
							],
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "add_single",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"new service\"\n}",
							"options": {
								"raw": {
									"language": "javascript"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services",
							"host": [
								"{{url}}"
							],
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_single",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/services/{{serviceId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"{{serviceId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "employees",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response body should contain token\", function () {",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.expect(responseJson).to.have.property(\"token\");",
									"    pm.expect(responseJson).to.have.property(\"role\");",
									"    pm.expect(responseJson).to.have.property(\"id\");",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": {\n        \"nickName\": \"{{nickname}}\",\n        \"password\": \"{{password}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/employees/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"employees",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login_uncorrect",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": {\n        \"nickName\": \"{{nickname}}\",\n        \"password\": \"wrong password\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/employees/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"employees",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/employees/",
							"host": [
								"{{url}}"
							],
							"path": [
								"employees",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get_single",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/employees/{{employeeId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"employees",
								"{{employeeId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "orders",
			"item": [
				{
					"name": "get_all",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "add_single",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customerInfo\": {\n        \"names\": \"test user\",\n        \"email\": \"test@email.wp\",\n        \"phone\": \"997\"\n    },\n    \"carInfo\": {\n        \"productionYear\": 2011,\n        \"make\": \"fiat\",\n        \"model\": \"ma≈Çy\",\n        \"licencePlate\": \"NLI\",\n        \"paintCode\": \"zts333\"\n    },\n    \"orderInfo\": {\n        \"service\": \"60b51c927aad1a388c44f73d\",\n        \"comment\": \"\",\n        \"images\": \"uri\"\n    },\n    \"orderDetails\": {\n        \"repairer\": \"60b51caa7aad1a388c44f73e\",\n        \"orderNumber\": 99,\n        \"stage\": {\n            \"main\": {\n                \"id\": 2,\n                \"isFinished\": false\n            },\n            \"sub\": {\n                \"id\": 1,\n                \"isFinished\": true\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_single",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/orders/{{orderId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "positions",
			"item": [
				{
					"name": "get_all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/positions/",
							"host": [
								"{{url}}"
							],
							"path": [
								"positions",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get_single",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/positions/{{positionId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"positions",
								"{{positionId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "awaitingOrders",
			"item": [
				{
					"name": "add_single",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "color",
									"value": " green",
									"type": "text"
								},
								{
									"key": "names",
									"value": " fff",
									"type": "text"
								},
								{
									"key": "email",
									"value": " ccc",
									"type": "text"
								},
								{
									"key": "phone",
									"value": " ccc",
									"type": "text"
								},
								{
									"key": "model",
									"value": " ccc",
									"type": "text"
								},
								{
									"key": "licencePlate",
									"value": " ccc",
									"type": "text"
								},
								{
									"key": "paintCode",
									"value": " ddd",
									"type": "text"
								},
								{
									"key": "comment",
									"value": " ddd",
									"type": "text"
								},
								{
									"key": "serviceName",
									"value": "Naprawa",
									"type": "text"
								},
								{
									"key": "productionYear",
									"value": " 2020",
									"type": "text"
								},
								{
									"key": "make",
									"value": " mercedes",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{url}}/awaiting-orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"awaiting-orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/awaiting-orders/",
							"host": [
								"{{url}}"
							],
							"path": [
								"awaiting-orders",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get_single",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/awaiting-orders/{{awaitingOrderId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"awaiting-orders",
								"{{awaitingOrderId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}